manifest {

    author          = "Eachan Johnson"
    homePage        = "https://github.com/scbirlab/nf-alchemish"
    description     = ""
    defaultBranch   = "v0.0.1"
    nextflowVersion = '!>=24.0.0'
    version         = "0.0.1"
    doi             = ''

}

params {

  // Required
  sample_sheet = null
  workflow = null

  // optional
  pool = .8
  validation = .1
  test = .1
  init_batch_size = 100
  batch_size = 100
  epochs = 10
  invert = false

  inputs = "inputs"
  outputs = "outputs"

  split_replicates = 3
  init_replicates = 3
  acquisitions = [
    "random",
    "tanimoto",
    "variance",
    "doubtscore",
    "information sensitivity",
  ]
  model_config = "${projectDir}/models/configs/ffn-5x16x10.json"
  cycles = 10  // active learning cycles

  help = false 

}

process {
  container = 'ghcr.io/scbirlab/nf-alchemish:latest'
  containerEngine = 'auto'  // docker, singularity, or podman
  conda = "${projectDir}/environment.yml"
}

conda {
  createTimeout = '4 h'
  cacheDir = "${projectDir}/.conda"
}

singularity {
  autoMounts = true
  cacheDir = "${projectDir}/.singularity"
}

docker {
  cacheDir = "${projectDir}/.docker"
  temp = true  // run in isolated container mount
}

profiles {

  standard {

    conda.enabled = true

    process {
      executor = 'slurm'
      array = 1000

      withLabel: big_cpu {
        time = '12h'
        cpus = 16
        memory = 32.GB
      }

      withLabel: big_time {
        time = '7d'
        cpus = 1
        memory = 128.GB
      }

      withLabel: some_mem {
        memory = 16.GB
      }

      withLabel: med_mem {
        memory = 64.GB
      }

      withLabel: big_mem {
        memory = 128.GB
      }

      withLabel: gpu_single {
        queue = 'ga100'
        time = '1d'
        module = 'cuDNN/8.9.2.26-CUDA-12.1.1'
        cpus = 1
        clusterOptions = '--gres=gpu:1'
        memory = 128.GB
      }

      withLabel: gpu {
        queue = 'ga100'
        time = '4h'
        module = 'cuDNN/8.9.2.26-CUDA-12.1.1'
        cpus = 1
        clusterOptions = '--gres=gpu:2'
        memory = 128.GB
      }

    }

    dag {
      enabled = true
      overwrite = true
    }

    notification {
      enabled = true
      to = "$USER@crick.ac.uk"
    }

  }

  local {

    process {
      executor = 'local'

      withLabel: big_cpu {
        time = '3h'
        cpus = 16
        memory = 32.GB
      }

      withLabel: some_mem {
        memory = 8.GB
      }

      withLabel: med_mem {
        memory = 16.GB
      }

      withLabel: big_mem {
        memory = 32.GB
      }

      withLabel: gpu {
        memory = 32.GB
      }

    }

  }

  gh {

    docker.enabled = true

    process {
      executor = 'local'
      cpus = 1
      memory = 12.GB

    }

  }

}